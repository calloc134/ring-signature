name: Release Build and Upload

on:
  release:
    types: [created]

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install system dependencies on Linux
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            pkg-config \
            nettle-dev \
            libglib2.0-dev \
            libgtk-3-dev \
            libjavascriptcoregtk-4.1-dev \
            libwebkit2gtk-4.1-dev \
            libsoup-3.0-dev \
            clang \
            llvm \
            libssl-dev \
            libpq-dev \
            librsvg2-dev

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt
          target: ${{ matrix.target }}

      - name: Build common library
        run: cargo build --release -p common

      - uses: pnpm/action-setup@v3
        with:
          version: 8.15.6

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"
          cache-dependency-path: client-tauri/pnpm-lock.yaml

      - name: Install client-tauri dependencies
        working-directory: client-tauri
        run: pnpm install

      - name: Build Tauri App
        working-directory: client-tauri
        run: pnpm tauri build

      - name: Upload Linux Bundles
        uses: actions/upload-artifact@v4
        with:
          name: linux-bundles
          path: |
            target/release/client-tauri
            target/release/bundle/deb/*.deb
            target/release/bundle/rpm/*.rpm
            target/release/bundle/appimage/*.AppImage
          if-no-files-found: error
          overwrite: true

  publish:
    name: Publish Release Assets
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Linux Bundles
        uses: actions/download-artifact@v4
        with:
          name: linux-bundles
          path: artifacts

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/*
          generate_release_notes: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
